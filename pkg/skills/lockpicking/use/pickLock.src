use uo;
use os;
use util;
use attributes;

include "include/client";
include ":attributes:attributes";

program picklock(who, lockpick)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  SendSysMessage(who, "Select a target.");
  var victim := Target(who);
  if(!victim)
    SendSysMessage(who, "Aborted.");
    return;
  endif
  if(Distance(victim, who) > 1)
    SendSysMessage(who, "That is too far away.");
    return;
  endif
  if(!victim.locked)
    SendSysMessage(who, "That is not locked.");
    return;
  endif
  if(GetObjProperty(victim,"level"))
    PickTreasureChest(who, lockpick, victim);
    return;
  else
    var diffi := CInt(GetObjProperty(victim,"MLockPickDiff"));
    if(diffi)
      PickMLockedItem(who, lockpick, victim, diffi);
      return;
    else
      var diff := CInt(GetObjProperty(victim,"LockPickDiff"));
      if(diff)
        PickLockedItem(who, lockpick, victim, diff);
        return;
      else
        SendSysMessage(who, "You cannot pick that");
        return;
      endif
    endif
  endif
endprogram

function PickMLockedItem(me, lockpick, chest, diff)
  if(!chest.locked)
    SendSysMessage(me,"That doesn't appear to be locked");
    return;
  endif
  PlaySoundEffect(me, SFX_242);
  sleep(1);
  if(SkillCheck(me, LOCKPICKING, diff,(diff * 2)))
    PrintTextAbovePrivate(chest,"*Unlocked!*",me);
    EraseObjProperty(chest, "MLockPickDiff");
    chest.locked := 0;
  else
    PrintTextAbovePrivate(chest,"You fail to pick the lock.",me);
    if(diff < 10)
      diff := 0;
    else
      diff := diff -10;
    endif
    if(!SkillCheck(me, LOCKPICKING,diff,0))
      PlaySoundEffect(chest,0xef);
      SendSysMessage(me,"Your pick breaks!");
      SubtractAmount(lockpick,1);
    endif
    return;
  endif
endfunction

function PickLockedItem(me, lockpick, chest, diff)
  if(!chest.locked)
    SendSysMessage(me,"That doesn't appear to be locked");
    return;
  endif
  PlaySoundEffect(me, SFX_242);
  sleep(1);
  if(SkillCheck(me, LOCKPICKING, diff,(diff * 2)))
    PrintTextAbovePrivate(chest,"*Unlocked!*",me);
  else
    PrintTextAbovePrivate(chest,"You fail to pick the lock.",me);
    if(diff < 10)
      diff := 0;
    else
      diff := diff -10;
    endif
    if(!SkillCheck(me, LOCKPICKING,diff,0))
      PlaySoundEffect(chest,0xef);
      SendSysMessage(me,"Your pick breaks!");
      SubtractAmount(lockpick,1);
    endif
    return;
  endif
  chest.locked := 0;
endfunction

function PickTreasureChest(me, lockpick, chest)
  var lvl := GetObjProperty(chest,"level");

    var guardians := GetObjProperty(chest,"#guardianList" );
    foreach guard in guardians
      if(SystemFindObjectBySerial(guard))
        SendSysMessage(me,"You need to kill all the guards");
        return;
      endif
    endforeach
    EraseObjProperty(chest, "#guardianList");


  if(!lvl)
    SendSysMessage(me, "You cannot pick that.");
    return;
  endif
  if(!chest.locked)
    SendSysMessage(me,"That doesn't appear to be locked");
    return;
  endif
  PlaySoundEffect(me, SFX_242);
  sleep(1);
  var diff :=(lvl * 20)+10;
  if(SkillCheck(me, LOCKPICKING,diff,(diff * 2)))
    PlaySoundEffect(chest,SFX_200);
    PrintTextAbovePrivate(chest,"*Unlocked!*",me);
    chest.locked := 0;
    SetObjProperty(chest,"DestroyAt", (ReadGameClock() + DESTROY_TREASURE_CHEST));
    start_script(":treasuremap:destroyTimer", chest);
    PrintTextAbove(chest,"The chest will collapse after "+(DESTROY_TREASURE_CHEST / 60)+" minutes");
  else
    PrintTextAbovePrivate(chest,"You fail to pick the lock.",me);
    if(diff < 10)
      diff := 0;
    else
      diff := diff -10;
    endif
    if(!SkillCheck(me, LOCKPICKING,diff,0))
      PlaySoundEffect(chest,0xef);
      SendSysMessage(me,"Your pick breaks!");
      SubtractAmount(lockpick,1);
    endif
    return;
  endif
endfunction